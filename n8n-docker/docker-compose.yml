

volumes:
  db_storage:
  n8n_storage:


services:

  node_builder:
    build:
      context: ../n8n-nodes-Random
      dockerfile: Dockerfile
    volumes:
      - ../n8n-nodes-Random/dist:/workspace/dist

  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: n8nio/n8n:latest
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - N8N_RUNNERS_ENABLED=true
      - N8N_NODE_USING_CUSTOM_NODES=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_CUSTOM_NODES=/home/node/.n8n/custom/nodes 
    ports:
      - 5678:5678
    volumes:
      - ./n8n-storage:/home/node/.n8n
      - ../n8n-nodes-Random/dist:/home/node/.n8n/custom
    depends_on:
      postgres:
        condition: service_healthy